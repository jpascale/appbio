DNA trimmingAbstract- Write lastIntroductionDNA sequencing is advancing very fast and files in the TB range, containing billions of reads are generated. A problem is that nucleiotide quality in a sequence tends to decrease with read length and nucleotides scoring under a certain threshold are not usually desired for further analysis. This threshold may be chosen simply as a certain length cutoff but more elaborate algorithm may present more useful datasets. In this paper two different algorithms are presented, one being a sliding window algorithm and the other being a modified version of the Mott algorithm. Both of these algorithms assume high quality base calls in the 5Õ end and decreasing quality in the 3Õ end. The sliding window algorithm slides over each quality record in a fastq file and calculates a "smooth" average. Each read will be trimmed at the point in the 3' end where the smoothed average falls below a specified quality threshold value. The windows size and quality threshold can be defined by the user but have standardized values tested on different data.The Mott algorithm iterates over the sequence and keeps nucleotides with a quality over a certain threshold. Nucleotides with a quality below the threshold but surrounded by high quality nucleotides are kept as well and this behavior is controlled by a tolerance parameter.MethodThe program is written in Python 2.7. User input is programmed using the argparse module where an input and output file is chosen and several options are available. With no options added default values are chosen for PARAMETERS/MOTIVATE.- Sliding window- Mott- Datasets- Test/trainingResults- Sliding window- Mott- FastQC-pictures- Analysis of discarded reads and partsDiscussion- How to decide if the trimming is good enough?- Compare algorithms- Compare with commercial programsAppendix